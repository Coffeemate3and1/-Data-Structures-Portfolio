import java.util.*;

class Graph {
    private int V; // Number of vertices
    private LinkedList<Integer>[] adjacencyList; // Adjacency list array

    // Constructor
    Graph(int V) {
        this.V = V;
        adjacencyList = new LinkedList[V];
        for (int i = 0; i < V; ++i)
            adjacencyList[i] = new LinkedList<>();
    }

    // Function to add an edge between vertices v and w
    void addEdge(int v, int w) {
        adjacencyList[v].add(w); // Add w to v's list
        adjacencyList[w].add(v); // Add v to w's list (for undirected graph)
    }

    // Function to print the adjacency list representation of the graph
    void printGraph() {
        for (int v = 0; v < V; ++v) {
            System.out.println("Adjacency list of vertex " + v);
            System.out.print("head");
            for (Integer neighbor : adjacencyList[v]) {
                System.out.print(" -> " + neighbor);
            }
            System.out.println("\n");
        }
    }

    public static void main(String[] args) {
        int V = 5; // Number of vertices
        Graph graph = new Graph(V);

        // Adding edges to the graph
        graph.addEdge(0, 1);
        graph.addEdge(0, 4);
        graph.addEdge(1, 2);
        graph.addEdge(1, 3);
        graph.addEdge(1, 4);
        graph.addEdge(2, 3);
        graph.addEdge(3, 4);

        // Print the adjacency list representation of the graph
        graph.printGraph();
    }
}
